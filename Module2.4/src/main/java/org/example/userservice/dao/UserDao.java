package org.example.userservice.dao;

import org.example.userservice.entity.User;
import java.util.List;

/**
 * Интерфейс Data Access Object (DAO) для работы с сущностью {@link User} в базе данных.
 * Определяет основные CRUD-операции (создание, чтение, обновление, удаление) для пользователей.
 */
public interface UserDao {
    /**
     * Создает нового пользователя в базе данных.
     *
     * @param user объект пользователя для сохранения (не должен быть null)
     */
    void create(User user);

    /**
     * Находит пользователя по его идентификатору.
     *
     * @param id уникальный идентификатор пользователя
     * @return найденный объект пользователя или null, если пользователь не существует
     */
    User read(Long id);

    /**
     * Обновляет данные существующего пользователя.
     *
     * @param user объект пользователя с обновленными данными (должен содержать существующий id)
     */
    void update(User user);

    /**
     * Удаляет пользователя по его идентификатору.
     *
     * @param id уникальный идентификатор пользователя для удаления
     */
    void delete(Long id);

    /**
     * Возвращает список всех пользователей из базы данных.
     *
     * @return список объектов {@link User} (может быть пустым, но не null)
     */
    List<User> findAll();
}